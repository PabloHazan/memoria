{"version":3,"sources":["axiosConfig.ts","modules/photos/pages/collage/CollageStyle.tsx","modules/photos/pages/collage/Collage.tsx","modules/photos/pages/collage/ColalgeContainer.tsx","modules/photos/hooks/findImages.hook.tsx","modules/photos/pages/photo/Photo.tsx","modules/photos/pages/photo/PhotoContainer.tsx","modules/photos/hooks/fetchImage.hook.tsx","App.routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Axios","defaults","baseURL","GridBackgroundImage","styled","Grid","url","Img","img","Collage","images","backgroundImagePath","showImage","container","direction","justify","alignItems","wrap","map","name","src","width","onClick","CollageContainer","props","findImages","useState","setImages","useEffect","axios","get","then","data","useFindImages","history","useHistory","useCallback","path","push","PHOTO_PATH","btoa","backgroundImage","Photo","image","PhotoContainer","useParams","setImage","useFetchImage","atob","COLLAGE_PATH","routes","component","to","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAEAA,IAAMC,SAASC,QAAU,Q,+DCEZC,EAAsBC,YAAOC,IAAPD,CAAH,8IACJ,qBAAGE,OAMlBC,EAAMH,IAAOI,IAAV,iR,OCeDC,EAfC,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,oBAAqBC,EAAhC,EAAgCA,UAAhC,OAA8D,mCAC1E,cAACT,EAAD,CACIG,IAAKK,EACLE,WAAS,EACTC,UAAU,MACVC,QAAQ,aACRC,WAAW,SACXC,KAAK,OANT,gBAQKP,QARL,IAQKA,OARL,EAQKA,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,KAAMb,EAAT,EAASA,IAAT,OACT,cAACC,EAAD,CAAKa,IAAKd,EAAKe,MAAM,KAAKC,QAAS,kBAAMV,EAAUO,cCDhDI,EAbU,SAACC,GACtB,IAAMC,ECCmB,WAA6B,IAAD,EACzBC,mBAA+B,MADN,mBAC9ChB,EAD8C,KACtCiB,EADsC,KAOrD,OALAC,qBAAU,WACNC,IACKC,IAAmB,UACnBC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcL,EAAUK,QACnC,IACItB,EDRYuB,GAEbC,EAAUC,cACVvB,EAAYwB,uBAAY,SAACC,GAAD,OAAkBH,EAAQI,KAAKC,EAAWC,KAAKH,OAAS,IACtF,OAAO,cAAC,EAAD,2BACCb,GADD,IAEHd,OAAM,OAAEe,QAAF,IAAEA,OAAF,EAAEA,EAAYf,OACpBC,oBAAmB,OAAEc,QAAF,IAAEA,OAAF,EAAEA,EAAYgB,gBACjC7B,UAAWA,MEDJ8B,EAND,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MACb,OAAO,oCACE,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOrC,MAAO,qBAAKc,IAAKuB,EAAMrC,SCSvBsC,EAVQ,SAACpB,GAAgB,IAC5BL,EAAS0B,cAAT1B,KACFwB,ECNmB,SAACxB,GAAwC,IAAD,EACvCO,mBAA+B,MADQ,mBAC1DiB,EAD0D,KACnDG,EADmD,KAOjE,OALAlB,qBAAU,WACNC,IACKC,IADL,iBACkCX,IAC7BY,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcc,EAASd,QAClC,IACIW,EDDOI,CAAcC,KAAK7B,IAEjC,OAAO,cAAC,EAAD,2BACCK,GADD,IAEHmB,MAAOA,MENFM,EAAuB,WACvBV,EAAa,eAACF,EAAD,uDAAgB,QAAhB,uBAAsCA,IAInDa,EAAiC,CAC1C,CAAEb,KAAMY,EAAcE,UAAW1C,GACjC,CAAE4B,KAAME,IAAcY,UAAWT,GACjC,CAAEL,KAAM,KAAMc,UALO,SAAC3B,GAAD,OAAgB,cAAC,IAAD,CAAU4B,GAAIH,OCCxCI,EARH,kBAAM,8BAChB,cAAC,IAAD,UACE,cAAC,IAAD,UACGH,EAAOhC,KAAI,gBAAGmB,EAAH,EAAGA,KAAMc,EAAT,EAASA,UAAT,OAA8B,cAAC,IAAD,CAAOd,KAAMA,EAAMc,UAAWA,cCK/DG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.380f220c.chunk.js","sourcesContent":["import Axios from 'axios';\n\nAxios.defaults.baseURL = '/api/';\n// Axios.defaults.baseURL = 'http://192.168.0.17:8080/api/';","import React from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport styled from 'styled-components';\n\nexport const GridBackgroundImage = styled(Grid)`\n    background-image: url(${({ url }: { url: string | null }) => url});\n    background-repeat: no-repeat;\n    background-size: 100%;\n    width: 100%;\n`;\n\nexport const Img = styled.img`\n    opacity: 0.0;\n    transition: transform 0.2s;\n    &:hover {\n        transform: scale(1.5);\n        opacity: 0.85;\n        z-index: 2;\n        /* border-style: solid;\n        border-width: 5px;\n        border-color: white; */\n    }\n`","import React from 'react';\nimport { GridBackgroundImage, Img } from './CollageStyle'\nimport { Image } from '../../model/image';\n\ninterface CollageProps {\n    images: Array<Image> | null;\n    backgroundImagePath: string | null;\n    showImage: (path: string) => void;\n}\n\n\nconst Collage = ({ images, backgroundImagePath, showImage }: CollageProps) => <>\n    <GridBackgroundImage\n        url={backgroundImagePath}\n        container\n        direction='row'\n        justify='flex-start'\n        alignItems='center'\n        wrap='wrap'\n    >\n        {images?.map(({ name, url }) =>\n            <Img src={url} width=\"5%\" onClick={() => showImage(name)} />\n        )}\n    </GridBackgroundImage>\n</>\n\nexport default Collage;","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useFindImages } from '../../hooks/findImages.hook';\nimport Collage from './Collage';\nimport { PHOTO_PATH } from '../../../../App.routes';\n\n\nconst CollageContainer = (props: any) => {\n    const findImages = useFindImages();\n\n    const history = useHistory();\n    const showImage = useCallback((path: string) => history.push(PHOTO_PATH(btoa(path))), []);\n    return <Collage\n        {...props}\n        images={findImages?.images}\n        backgroundImagePath={findImages?.backgroundImage}\n        showImage={showImage}\n    />\n}\n\nexport default CollageContainer\n","import React, { useEffect, useState } from \"react\"\nimport axios from \"axios\";\nimport { Image } from \"../model/image\";\n\ninterface PhotoResponse {\n    images: Array<Image>;\n    backgroundImage: string;\n}\n\nexport const useFindImages = (): PhotoResponse | null => {\n    const [images, setImages] = useState<PhotoResponse | null>(null);\n    useEffect(() => {\n        axios\n            .get<PhotoResponse>('photos')\n            .then(({ data }) => setImages(data));\n    }, [])\n    return images;\n}","import React from 'react';\nimport { Image } from '../../model/image';\n\ninterface PhotoProps {\n    image: Image\n}\n\n\n\nconst Photo = ({ image }: PhotoProps) => {\n    return <>\n       {image?.url && <img src={image.url} />}\n    </>\n}\n\nexport default Photo;\n","import React from 'react';\nimport Photo from './Photo';\nimport { useFetchImage } from '../../hooks/fetchImage.hook';\nimport { useParams } from 'react-router-dom';\n\ninterface PhotoParams {\n    name: string\n}\n\n\nconst PhotoContainer = (props: any) => {\n    const { name } = useParams<PhotoParams>();\n    const image = useFetchImage(atob(name));\n    debugger\n    return <Photo\n        {...props}\n        image={image}\n    />\n}\n\nexport default PhotoContainer;","import React, { useEffect, useState } from \"react\"\nimport axios from \"axios\";\nimport { Image } from \"../model/image\";\n\ninterface PhotoResponse extends Image { }\n\nexport const useFetchImage = (name: string): PhotoResponse | null => {\n    const [image, setImage] = useState<PhotoResponse | null>(null);\n    useEffect(() => {\n        axios\n            .get<PhotoResponse>(`photos/${name}`)\n            .then(({ data }) => setImage(data));\n    }, [])\n    return image;\n}","import React from 'react';\nimport { Redirect, RouteComponentProps } from 'react-router-dom';\nimport Collage from './modules/photos/pages/collage/ColalgeContainer';\nimport Photo from './modules/photos/pages/photo/PhotoContainer';\n\ninterface RouteDefinition {\n    path: string;\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n}\n\nexport const COLLAGE_PATH: string = '/collage';\nexport const PHOTO_PATH = (path: string = ':name') => `/photo/${path}`;\n\nconst DefualtComponent = (props: any) => <Redirect to={COLLAGE_PATH} />\n\nexport const routes: Array<RouteDefinition> = [\n    { path: COLLAGE_PATH, component: Collage },\n    { path: PHOTO_PATH(), component: Photo },\n    { path: '**', component: DefualtComponent }\n];\n\n","import React from 'react';\nimport './axiosConfig';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport { routes } from './App.routes';\n\n\nconst App = () => <div>\n  <BrowserRouter >\n    <Switch>\n      {routes.map(({ path, component }: any) => <Route path={path} component={component} />)}\n    </Switch>\n  </BrowserRouter>\n</div>\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}